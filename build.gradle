plugins {
	id 'org.springframework.boot' version '2.5.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.tintulip'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '16'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
  maven {
    url "https://tintulip.jfrog.io/artifactory/gradle-remote/"
    credentials {
      username "ci"
      password "$artifactoryPassword"
    }
  }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	runtimeOnly 'org.postgresql:postgresql'
	testRuntimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	compileOnly "org.flywaydb:flyway-core:7.10.0"
	runtimeOnly 'com.h2database:h2'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

}

import org.gradle.internal.logging.text.StyledTextOutputFactory
import static org.gradle.internal.logging.text.StyledTextOutput.Style

test {
    testLogging {
        events = ["passed", "failed", "skipped"]
        def out = services.get(StyledTextOutputFactory).create("testResults")

        afterSuite { desc, result ->
            if (!desc.parent) {
                out.withStyle(Style.Header).println("Result: ${result.resultType} (Total ${result.testCount} tests)")
                out.withStyle(Style.Success).println("        ${result.successfulTestCount} successes")
                out.withStyle(Style.Failure).println("        ${result.failedTestCount} failures")
                out.withStyle(Style.Info).println("        ${result.skippedTestCount} skipped")
            }
        }
    }
}

test {
	useJUnitPlatform()
}
