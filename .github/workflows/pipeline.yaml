name: Terratest

on:
  workflow_dispatch: # manual trigger
  push:
    branches:
    - main

env:
  tf_version: 0.15.4
  AWS_ACCESS_KEY_ID: ${{ secrets.SANDBOX_AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.SANDBOX_AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: eu-west-2

jobs:
  terraform_checks:
    name: Terraform checks
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2.3.4
    - name: tfsec
      uses: tintulip/terraform-security-scan@v2.2.1
      with:
        tfsec_actions_comment: false
    - name: checkov-action
      uses: bridgecrewio/checkov-action@master
      with:
        directory: .
        quiet: true
        framework: terraform

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ env.tf_version }}

    - name: Terraform Format
      run: terraform fmt -check -recursive

    - name: Terraform Init
      run: terraform init

    - name: Terraform Validate
      run: terraform validate -no-color

  Terratest:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: test
    env:
      env_name: sandbox
    environment:
      name: sandbox
    steps:
    - name: Checkout
      uses: actions/checkout@v2.3.4

    - name: Configure AWS credentials from Sandbox account
      uses: aws-actions/configure-aws-credentials@v1.5.9
      with:
        aws-access-key-id: ${{ secrets.SANDBOX_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.SANDBOX_AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-2
        role-to-assume: github-pipeline-user
        role-duration-seconds: 900
        role-session-name: gh-pipeline-user

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.16.4'

    - name: Fetch packages
      run: go get -v -t -d

    - name: Run tests
      run: go test ./... -v -timeout 90m


