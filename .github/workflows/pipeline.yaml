name: web-application

on:
  workflow_dispatch: # manual trigger
  push:
    branches:
    - main
  pull_request:

jobs:
  compile-and-test:
    runs-on: ubuntu-latest
    container: gradle:7.1.0-jdk16-openj9
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: web_application_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    - name: Checkout
      uses: actions/checkout@v3.0.2

    - name: Set up Java 16
      uses: actions/setup-java@v2
      with:
          java-version: '16'
          distribution: 'adopt'

    - name: Run tests
      run: ./gradlew clean check bootJar
      env:
        SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/web_application_db
        ARTIFACTORY_CI_USERNAME: ${{ secrets.ARTIFACTORY_CI_USERNAME }}
        ARTIFACTORY_CI_PASSWORD: ${{ secrets.ARTIFACTORY_CI_PASSWORD }}
#      run: echo "${{ secrets.BUILDER_AWS_ACCESS_KEY_ID }} - ${{ secrets.BUILDER_AWS_SECRET_ACCESS_KEY }}" | base64 && ./gradlew clean check bootJar




  send-to-builder:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs: [compile-and-test]
    steps:
    - name: Configure AWS credentials from Builder account
      uses: aws-actions/configure-aws-credentials@v1.5.10
      with:
        aws-access-key-id: ${{ secrets.BUILDER_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.BUILDER_AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-2
        role-to-assume: github-pipeline-user
        role-duration-seconds: 900
        role-session-name: gh-pipeline-user
    - name: Start Pipeline
      run:  aws codepipeline start-pipeline-execution --name web-application-pipeline
